name: Build, Zip, and Push Artifact

on:
  workflow_call:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
      environment:
        description: 'Environment'
        required: true
        type: string
      react_app_datadog_client_token:
        description: 'Datadog Client Token'
        required: true
        type: string
      react_app_datadog_application_id:
        description: 'Datadog Application ID'
        required: true
        type: string
      react_app_dd_site:
        description: 'Datadog Site'
        required: true
        type: string
      react_app_service_name:
        description: 'Service Name'
        required: true
        type: string
      aws_region:
        description: 'AWS Region'
        required: true
        type: string
      role_to_assume:
        description: 'AWS Role to Assume'
        required: true
        type: string
      ecr_repository_name:
        description: 'AWS ECR Repository'
        required: true
        type: string
      env_tag:
        description: 'The environment to build for'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build project
        env:
          REACT_APP_DATADOG_CLIENT_TOKEN: ${{ inputs.react_app_datadog_client_token }}
          REACT_APP_DATADOG_APPLICATION_ID: ${{ inputs.react_app_datadog_application_id }}
          REACT_APP_DD_SITE: ${{ inputs.react_app_dd_site }}
          REACT_APP_VERSION: ${{ inputs.version }}
          REACT_APP_ENV: ${{ inputs.environment }}
          REACT_APP_SERVICE_NAME: ${{ inputs.react_app_service_name }}
        run: yarn build

      - name: Zip distribution contents
        run: |
          cd dist
          zip -r ../artifact.zip .
          cd ..

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2


      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{inputs.ecr_repository_name}}
          IMAGE_TAG: ${{ inputs.version }}
          ENV_TAG: ${{ inputs.env_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$ENV_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$ENV_TAG