name: Deploy Lambda

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string
      working_dir:
        description: 'The directory of the Lambda function'
        required: false
        default: '.'
        type: string
      role_to_assume:
        description: 'the aws role to assume'
        required: false
        default: ''
        type: string

    outputs:
      checksum:
        description: "The checksum of the artifact"
        value: ${{ jobs.upload.outputs.checksum }}


permissions:
  id-token: write
  contents: read

jobs:
  upload:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_dir }}
    outputs:
      checksum: ${{ steps.checksum.outputs.checksum }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set artifact name based on working directory
        id: set_artifact_name
        run: |
          if [ "${{ inputs.working_dir }}" = "." ]; then
            echo "artifact_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
          else
            ARTIFACT_NAME=$(basename ${{ inputs.working_dir }})
            echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT
          fi
        outputs:
          artifact_name:

      - name: Zip Lambda function
        needs:
          - set_artifact_name
        run: |
          cd app
          zip -r ../${{ needs.set_artifact_name.outputs.artifact_name }}.zip .
          cd ..

      - name: Calculate checksum
        id: checksum
        needs:
          - set_artifact_name
        run: |
          shasum -a 256 ${{ needs.set_artifact_name.outputs.artifact_name }}.zip > checksum.txt
          CHECKSUM=$(cut -d ' ' -f 1 checksum.txt)
          echo "checksum=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: Set role if not provided
        id: set_role
        run: |
          if [ -z "${{ inputs.role_to_assume }}" ]; then
            echo "role=${{ vars.ROLE_TO_ASSUME }}" >> "$GITHUB_OUTPUT"
          else
            echo "role=${{ inputs.role_to_assume }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        needs:
          - set_role
        with:
          role-to-assume: ${{ needs.set_role.outputs.role }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Upload Lambda zip to S3
        needs:
          - set_artifact_name
        run: |
          aws s3 cp $ARTIFACT.zip s3://${{ vars.LAMBDA_BUCKET_PREFIX}}-${{ vars.AWS_ACCOUNT_ID}}/${{ needs.set_artifact_name.outputs.artifact_name }}/${{ needs.set_artifact_name.outputs.artifact_name }}.zip
