name: Compile and Package Docker Image for Green deployment

on:
  workflow_call:
    inputs:
      aws_region:
        description: 'AWS Region'
        required: true
        type: string
      role_to_assume:
        description: 'AWS Role to Assume'
        required: true
        type: string
      ecr_repository_name:
        description: 'AWS ECR Repository'
        required: true
        type: string
      env_tag:
        description: 'The environment to build for'
        required: true
        type: string
      version:
        description: 'Version number'
        required: true
        type: string
      aws_region_dev:
        description: 'AWS Region for development'
        type: string
        default: 'us-west-2'
      aws_account_id_dev:
        description: 'AWS Account ID for development'
        type: string
        default: '905418256626'

permissions:
  id-token: write
  contents: read

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ inputs.aws_account_id_dev }}  # Cross-account ECR registry

      - name: Build and push Docker image for Green deployment
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{inputs.ecr_repository_name}}
          IMAGE_TAG: ${{ inputs.version }}
          ENV_TAG: ${{ inputs.env_tag }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
